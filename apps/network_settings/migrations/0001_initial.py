# Generated by Django 4.0.3 on 2022-03-31 21:21

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('apps_user_accounts', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CompensationPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('percentage', models.IntegerField(blank=True, default=0, help_text='Percentage', null=True)),
                ('condition', models.CharField(max_length=255, unique=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Packages',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('package_name', models.CharField(choices=[('Bronze', 'Bronze'), ('Silver', 'Silver'), ('Gold', 'Gold'), ('Titanium', 'Titanium'), ('Titanium Pro', 'Titanium Pro'), ('Diamond', 'Diamond'), ('Diamond Pro', 'Diamond Pro'), ('Presidential', 'Presidential')], max_length=100, unique=True)),
                ('personal_volume', models.IntegerField(blank=True, default=0, help_text='Personal volume attached', null=True, unique=True)),
                ('dollar_amount', models.IntegerField(blank=True, default=0, help_text='Dollar Amount attached', null=True, unique=True)),
                ('cedis_amount', models.IntegerField(blank=True, default=0, help_text='Cedis Amount attached', null=True, unique=True)),
                ('naira_amount', models.IntegerField(blank=True, default=0, help_text='Naira Amount attached', null=True, unique=True)),
                ('products_quantity', models.IntegerField(blank=True, default=0, help_text='Quantity of Product upon registration', null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Rank',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rank_name', models.CharField(choices=[('Leader', 'Leader'), ('Coordinator', 'Coordinator'), ('Manager', 'Manager'), ('1-Star Manager', '1-Star Manager'), ('2-Star Manager', '2-Star Manager'), ('3-Star Manager', '3-Star Manager'), ('4-Star Manager', '4-Star Manager'), ('Director', 'Director'), ('1-Star Director', '1-Star Director'), ('2-Star Director', '2-Star Director'), ('3-Star Director', '3-Star Director'), ('Prime Minister', 'Prime Minister'), ('President', 'President'), ('Senior President', 'Senior President')], max_length=255, unique=True)),
                ('pv', models.FloatField(blank=True, default=0, help_text='Needed Personal Volume for eligibility', null=True, unique=True)),
                ('lesser_team_volume', models.FloatField(blank=True, default=0, help_text='Volume from the leg built by me', null=True, unique=True)),
                ('sponsor_team_volume', models.FloatField(blank=True, default=0, help_text='Volume from the leg built by upliner', null=True, unique=True)),
                ('max_cummulative_leg', models.FloatField(blank=True, default=0, help_text='Maximum pv needed per on person in a leg', null=True, unique=True)),
                ('earning_in_cedis', models.FloatField(blank=True, default=0, help_text='Maximum pv needed per on person in a leg', null=True, unique=True)),
                ('prizes', models.CharField(blank=True, max_length=500, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='TokenCreationHelper',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('number', models.IntegerField(blank=True, default=0, help_text='token_number_helper', null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Epins',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('e_pin', models.CharField(choices=[('Bronze', 'Bronze'), ('Silver', 'Silver'), ('Gold', 'Gold'), ('Titanium', 'Titanium'), ('Titanium Pro', 'Titanium Pro'), ('Diamond', 'Diamond'), ('Diamond Pro', 'Diamond Pro'), ('Presidential', 'Presidential')], max_length=100, unique=True)),
                ('country', models.CharField(blank=True, choices=[('Ghana', 'Ghana'), ('Nigeria', 'Nigeria'), ('Cameroon', 'Cameroon'), ('Ivory Coast', 'Ivory Coast'), ('Togo', 'Togo')], max_length=1000, null=True)),
                ('payement_transaction_proof', models.IntegerField(blank=True, default=0, help_text='Transaction ID', null=True, unique=True)),
                ('used_for', models.CharField(blank=True, choices=[('Activation', 'Activation'), ('Repurchase', 'Repurchase')], max_length=10, null=True)),
                ('status', models.CharField(choices=[('Used', 'Used'), ('Unused', 'Unused')], default='Unused', max_length=10)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_by', to=settings.AUTH_USER_MODEL)),
                ('for_subadmin', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subadmin', to='apps_user_accounts.subadmintable')),
                ('package', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='admin', to='network_settings.packages')),
                ('used_by', models.ForeignKey(blank=True, default=0, help_text='Personal volume attached', null=True, on_delete=django.db.models.deletion.CASCADE, to='apps_user_accounts.clientstable', unique=True)),
            ],
            managers=[
                ('all_epins', django.db.models.manager.Manager()),
            ],
        ),
    ]
